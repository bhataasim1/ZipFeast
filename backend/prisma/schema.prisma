// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique @default("aasim@zipfeast.in")
  password  String
  phone     String?
  avatar    String?
  address   String?
  city      String?
  state     String?
  pincode   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Merchant {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  phone     String
  address   String
  city      String
  state     String
  pincode   String
  avatar    String?
  products  Product[]
  approved  Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Order     Order[]
}

model Admin {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  phone     String
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id         Int       @id @default(autoincrement())
  user       User      @relation(fields: [userId], references: [id])
  userId     Int
  merchant   Merchant  @relation(fields: [merchantId], references: [id])
  merchantId Int
  products   Product[]
  status     String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  price       Float
  description String?
  merchant    Merchant @relation(fields: [merchantId], references: [id])
  merchantId  Int
  orders      Order[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
